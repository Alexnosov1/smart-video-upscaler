import os

def collect_project_data(root_dir, output_file, ignore_dirs=None):
    if ignore_dirs is None:
        ignore_dirs = {'.venv', '.git'}  # –ö–∞—Ç–∞–ª–æ–≥–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å

    with open(output_file, "w", encoding="utf-8") as out_file:
        def write_structure(current_dir, level=0):
            # –ó–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—É—â–∏–π –∫–∞—Ç–∞–ª–æ–≥ —Å –æ—Ç—Å—Ç—É–ø–æ–º
            out_file.write(f"{'  ' * level}üìÅ {os.path.basename(current_dir)}/\n")

            try:
                # –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫ –≤ —Ç–µ–∫—É—â–µ–º –∫–∞—Ç–∞–ª–æ–≥–µ
                entries = sorted(os.listdir(current_dir))  # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
                for entry in entries:
                    entry_path = os.path.join(current_dir, entry)

                    # –ï—Å–ª–∏ —ç—Ç–æ –∫–∞—Ç–∞–ª–æ–≥, –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –µ–≥–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å
                    if os.path.isdir(entry_path):
                        if entry in ignore_dirs:
                            continue
                        write_structure(entry_path, level + 1)
                    # –ï—Å–ª–∏ —ç—Ç–æ —Ñ–∞–π–ª, –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ–≥–æ
                    elif os.path.isfile(entry_path):
                        out_file.write(f"{'  ' * (level + 1)}üìÑ {entry}\n")

                        # –ß—Ç–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–æ–≤ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏
                        if entry.endswith(('.py', '.json', '.txt', '.md', '.env')):
                            out_file.write(f"{'  ' * (level + 2)}--- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ ---\n")
                            try:
                                with open(entry_path, "r", encoding="utf-8") as file:
                                    content = file.read()
                                    out_file.write(f"{'  ' * (level + 2)}{content}\n")
                            except Exception as e:
                                out_file.write(f"{'  ' * (level + 2)}–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}\n")
                            out_file.write(f"{'  ' * (level + 2)}--- –ö–æ–Ω–µ—Ü —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ ---\n")
            except Exception as e:
                out_file.write(f"{'  ' * level}–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞—Ç–∞–ª–æ–≥—É: {e}\n")

        # –ù–∞—á–∞—Ç—å —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞
        write_structure(root_dir)

if __name__ == "__main__":
    # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    root_directory = "."  # –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
    output_filename = "project_summary.txt"

    collect_project_data(root_directory, output_filename)
    print(f"–°–≤–æ–¥–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª: {output_filename}")